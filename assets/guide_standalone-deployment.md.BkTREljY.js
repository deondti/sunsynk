import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.DAp7F7uL.js";const g=JSON.parse('{"title":"Run standalone using docker compose","description":"","frontmatter":{},"headers":[],"relativePath":"guide/standalone-deployment.md","filePath":"guide/standalone-deployment.md","lastUpdated":1725641346000}'),e={name:"guide/standalone-deployment.md"},l=n(`<h1 id="run-standalone-using-docker-compose" tabindex="-1">Run standalone using docker compose <a class="header-anchor" href="#run-standalone-using-docker-compose" aria-label="Permalink to &quot;Run standalone using docker compose&quot;">​</a></h1><p>If you are running only Home Assistant Core, or do not have Home Assistant Supervisor, you might want to run this addon as a standalone service. Docker Compose is commonly used to manage services that run in docker containers.</p><p>As a standalone service, this addon does not depend on Home Assistant Core, Supervisor or OS. You can run this addon and send data to any MQTT server without using other HA services.</p><p>Another benefit of this setup is to run this addon along with <code>mbusd</code> on a Raspberry Pi without having to install Home Assistant on it.</p><h2 id="local-docker-compose-builds" tabindex="-1">Local Docker-Compose Builds <a class="header-anchor" href="#local-docker-compose-builds" aria-label="Permalink to &quot;Local Docker-Compose Builds&quot;">​</a></h2><p>In these example commands we prefix the <code>docker-compose build</code> commands with the environment variable definition <code>BUILD_FROM=...</code>, which specifies which base image is used. For a Raspberry Pi you would need to use <code>BUILD_FROM=homeassistant/armhf-base-python:3.9</code>, and for a 64bit PC you would use <code>BUILD_FROM=homeassistant/amd64-base-python:3.9</code>. A list of available base images can be found in <code>hass-addon-sunsynk-multi/build.yaml</code> and <code>hass-addon-mbusd/build.yaml</code>. Use the one that is most appropriate for your host computer.</p><h3 id="sunsynk-multi" tabindex="-1">Sunsynk Multi <a class="header-anchor" href="#sunsynk-multi" aria-label="Permalink to &quot;Sunsynk Multi&quot;">​</a></h3><details class="details custom-block"><summary><strong>options.yaml</strong> example</summary><p>Create your own <code>options.yaml</code> file with the following content:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DRIVER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pymodbus&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">INVERTERS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SERIAL_NR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;007&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    HA_PREFIX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SS</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    MODBUS_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    DONGLE_SERIAL_NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tcp://mbusd:502</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SENSOR_DEFINITIONS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">single-phase</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SENSORS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">energy_management</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">power_flow_card</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pv2_power</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SENSORS_FIRST_INVERTER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">settings</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MANUFACTURER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Sunsynk</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">READ_ALLOW_GAP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">READ_SENSORS_BATCH_SIZE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SCHEDULES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">W</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    READ_EVERY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    REPORT_EVERY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    CHANGE_ANY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    CHANGE_BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    CHANGE_PERCENT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">NUMBER_ENTITY_MODE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auto&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MQTT_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">core-mosquitto</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MQTT_PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1883</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MQTT_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hass</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MQTT_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DEBUG: 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DEBUG_DEVICE: &quot;/dev/ttyAMA0&quot;</span></span></code></pre></div><p>Adjust the <code>INVERTERS</code> section to match your inverter setup. <code>tcp://mbusd:502</code> points toward a DNS entry, or most likely container named <code>mbusd</code> included in this docker compose stack.</p></details><ul><li>Build the image <code>BUILD_FROM=&lt;base_image&gt; docker compose build sunsynk-multi</code></li><li>Run the container <code>docker compose up -d sunsynk-multi</code></li><li>See the container logs <code>docker compose logs -f sunsynk-multi</code></li></ul><h3 id="mbusd" tabindex="-1">Mbusd <a class="header-anchor" href="#mbusd" aria-label="Permalink to &quot;Mbusd&quot;">​</a></h3><ul><li>Edit <code>docker-compose.yaml</code> changing the values under <code>environment</code> to match your configuration, leaving the device set to <code>/dev/ttyUSB0</code> as we mount the correct port to this location in the next step.</li><li>Under <code>volumes</code> change <code>/dev/ttyRS485</code> to the RS485 port of your host computer.</li><li>Build the image <code>BUILD_FROM=&lt;base_image&gt; docker compose build mbusd</code></li><li>Run the container <code>docker compose up mbusd</code></li><li>View container logs <code>docker compose logs -f mbusd</code></li></ul><h2 id="using-pre-built-docker-images" tabindex="-1">Using Pre-built Docker Images <a class="header-anchor" href="#using-pre-built-docker-images" aria-label="Permalink to &quot;Using Pre-built Docker Images&quot;">​</a></h2><p>The repo also contains prebuilt Docker images for Sunsynk Multi. You can see the different images for the various supported architectures <a href="https://github.com/kellerza?tab=packages&amp;repo_name=sunsynk" target="_blank" rel="noreferrer">here</a>.</p><h3 id="docker-compose-examples" tabindex="-1">Docker-Compose examples <a class="header-anchor" href="#docker-compose-examples" aria-label="Permalink to &quot;Docker-Compose examples&quot;">​</a></h3><h4 id="amd64" tabindex="-1">amd64 <a class="header-anchor" href="#amd64" aria-label="Permalink to &quot;amd64&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sunsynk-multi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/kellerza/hass-addon-sunsynk-multi/amd64:stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${PWD}/options.yaml:/data/options.yaml</span></span></code></pre></div><h4 id="aarch64" tabindex="-1">aarch64 <a class="header-anchor" href="#aarch64" aria-label="Permalink to &quot;aarch64&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sunsynk-multi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/kellerza/hass-addon-sunsynk-multi/aarch64:stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${PWD}/options.yaml:/data/options.yaml</span></span></code></pre></div><h4 id="armv7" tabindex="-1">armv7 <a class="header-anchor" href="#armv7" aria-label="Permalink to &quot;armv7&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sunsynk-multi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/kellerza/hass-addon-sunsynk-multi/armv7:stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${PWD}/options.yaml:/data/options.yaml</span></span></code></pre></div><h3 id="docker-cli-examples" tabindex="-1">Docker CLI examples <a class="header-anchor" href="#docker-cli-examples" aria-label="Permalink to &quot;Docker CLI examples&quot;">​</a></h3><p>Below are examples using the docker CLI.</p><blockquote><p>ℹ️ <strong>Note:</strong> Replace \${PWD} with the path to the location of your <code>options.yaml</code> file.</p></blockquote><h4 id="cli-amd64" tabindex="-1">CLI: amd64 <a class="header-anchor" href="#cli-amd64" aria-label="Permalink to &quot;CLI: amd64&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sunsynk-multi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--restart </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v \${PWD}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/options.yaml:/data/options.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ghcr.io/kellerza/hass-addon-sunsynk-multi/amd64:stable</span></span></code></pre></div><h4 id="cli-aarch64" tabindex="-1">CLI: aarch64 <a class="header-anchor" href="#cli-aarch64" aria-label="Permalink to &quot;CLI: aarch64&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sunsynk-multi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--restart </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v \${PWD}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/options.yaml:/data/options.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ghcr.io/kellerza/hass-addon-sunsynk-multi/aarch64:stable</span></span></code></pre></div><h4 id="cli-armv7" tabindex="-1">CLI: armv7 <a class="header-anchor" href="#cli-armv7" aria-label="Permalink to &quot;CLI: armv7&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sunsynk-multi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--restart </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v \${PWD}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/options.yaml:/data/options.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ghcr.io/kellerza/hass-addon-sunsynk-multi/armv7:stable</span></span></code></pre></div>`,29),t=[l];function h(p,k,d,o,r,E){return a(),i("div",null,t)}const y=s(e,[["render",h]]);export{g as __pageData,y as default};
